# Copyright © 2023 Intel Corporation
# SPDX-License-Identifier: Apache 2.0
# LEGAL NOTICE: Your use of this software and any required dependent software (the “Software Package”)
# is subject to the terms and conditions of the software license agreements for the Software Package,
# which may also include notices, disclaimers, or license terms for third party or open source software
# included in or with the Software Package, and your use indicates your acceptance of all such terms.
# Please refer to the “third-party-programs.txt” or other similarly-named text file included with the
# Software Package for additional details.

+include <pybind11/stl.h>
+include <pybind11/functional.h>

+include <vpu_cost_model.h>
+include <vpu_network_cost_model.h>
#+include <vpu_layer_cost_model.h>
+include <vpu/shave/layers.h>
+include <vpu_dma_cost_model.h>

+namespace VPUNN
-namespace flatbuffers
-namespace VPUNN_SCHEMA
-namespace VPUNN_unit_tests

-function std::basic_streambuf<CharT,Traits>::stossc
-function std::basic_streambuf<char, std::char_traits<char> >::stossc
-function std::basic_streambuf<char>::stossc

#for C++17 enablement
-function std::basic_streambuf<_CharT, _Traits>::__safe_gbump
-function std::basic_streambuf<_CharT, _Traits>::__safe_pbump
-function std::basic_streambuf<char, std::char_traits<char> >::__safe_gbump
-function std::basic_streambuf<char, std::char_traits<char> >::__safe_pbump

-class VPUNN::Serializer
-class VPUNN::FileHandler
-class VPUNN::LRUCache
-class VPUNN::FixedCache 
-class VPUNN::SerializableField
-class VPUNN::NNDescriptor
-class VPUNN::NNCostProvider
-class VPUNN::Logger
-class VPUNN::LoggerStream
-class VPUNN::NNExecutionContext
-class VPUNN::Inserter
-class VPUNN::RuntimeProcessingFactory

# for reference and pointer returning that should not transfer ownership (get_cost_model)
+default_static_pointer_return_value_policy           pybind11::return_value_policy::automatic_reference
+default_static_lvalue_reference_return_value_policy  pybind11::return_value_policy::reference
+default_member_pointer_return_value_policy           pybind11::return_value_policy::automatic_reference
+default_member_lvalue_reference_return_value_policy  pybind11::return_value_policy::reference